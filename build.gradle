buildscript {
    apply from: rootProject.file('versions.gradle')

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'maven-publish'
//    id 'maven'
//    id 'signing'
//    id "io.codearte.nexus-staging" version '0.22.0'
    id 'java-gradle-plugin'
    id 'com.github.johnrengelman.shadow' version "$shadowjarVersion"
    id 'com.gradle.plugin-publish' version "$gradlePublishPluginVersion"
    id 'com.jfrog.bintray' version "1.8.4"
}

group 'com.talk2duck'
version '1.0.0.1'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    shadow localGroovy()
    shadow gradleApi()
    compileOnly awsS3

    testImplementation awsS3
    testImplementation testing
}

configurations.compile.dependencies.remove dependencies.gradleApi()

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "com.talk2duck.gradle.buildcache.shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar {
    configurations = [project.configurations.compileOnly]
    archiveClassifier.set('')
    mergeServiceFiles()
    exclude 'META-INF/versions/'
    exclude 'META-INF/maven/'
    exclude 'META-INF/*.kotlin_module'
}

test {
    useJUnitPlatform()
}

gradlePlugin {
    plugins {
        s3BuildCache {
            id = 'com.talk2duck.gradle-s3-build-cache'
            implementationClass = 'com.talk2duck.gradle.buildcache.S3BuildCachePlugin'
            displayName = 'Gradle S3 Build Cache Plugin'
            description = 'Gradle build cache plugin that uses AWS S3 to store build artifacts'
        }
    }
}

pluginBundle {
    website = 'https://github.com/talk2duck/gradle-s3-build-cache'
    vcsUrl = 'https://github.com/talk2duck/gradle-s3-build-cache'
    tags = ['build-cache', 'cache', 's3']
}

jar {
    manifest {
        attributes(
                'com.talk2duck.gradle.buildcache.version': archiveVersion
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}


//signing {
//    def signingKey = findProperty("signingKey")
//    def signingPassword = findProperty("signingPassword")
//
//    useInMemoryPgpKeys(signingKey, signingPassword)
//    sign publishing.publications
//}
//
//def nexusUsername = project.findProperty('nexusUsername') ?: "notset"
//def nexusPassword = project.findProperty('nexusPassword') ?: "notset"

publishing {
//    repositories {
//        maven {
//            name 'SonatypeStaging'
//            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
//            credentials {
//                username nexusUsername
//                password nexusPassword
//            }
//        }
//        maven {
//            name 'SonatypeSnapshot'
//            url 'https://oss.sonatype.org/content/repositories/snapshots/'
//            credentials {
//                username nexusUsername
//                password nexusPassword
//            }
//        }
//    }

    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)

            pom {
                name = project.name
                description = 'Gradle build cache plugin that uses AWS S3 to store build artifacts'
                url = 'https://www.talk2duck.com'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Albert Latacz'
                        email = 'support@talk2duck.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:talk2duck/gradle-s3-build-cache.git'
                    developerConnection = 'scm:git:git@github.com:talk2duck/gradle-s3-build-cache.git'
                    url = 'git@github.com:talk2duck/gradle-s3-build-cache.git'
                }
            }

            artifact sourcesJar
            artifact javadocJar

        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['shadow']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'talk2duck'
        name = project.name
        desc = description
        websiteUrl = 'https://github.com/talk2duck/gradle-s3-build-cache'
        issueTrackerUrl = 'https://github.com/talk2duck/gradle-s3-build-cache/issues'
        vcsUrl = 'https://github.com/talk2duck/gradle-s3-build-cache.git'
        licenses = ['Apache-2.0']
        labels = []
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = project.version

        }
    }
}
