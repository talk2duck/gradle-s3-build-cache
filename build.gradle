buildscript {
    apply from: rootProject.file('versions.gradle')

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version "$shadowjarVersion"
    id 'com.gradle.plugin-publish' version "$gradlePublishPluginVersion"
}

group 'com.talk2duck'
version '0.1.3'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    shadow localGroovy()
    shadow gradleApi()
    compileOnly awsS3

    testImplementation awsS3
    testImplementation testing
}

configurations.compile.dependencies.remove dependencies.gradleApi()

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "com.talk2duck.gradle.buildcache.shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar


shadowJar{
    configurations = [project.configurations.compileOnly]
    archiveClassifier.set('')
    mergeServiceFiles()
    exclude 'META-INF/versions/'
    exclude 'META-INF/maven/'
    exclude 'META-INF/*.kotlin_module'
}

test {
    useJUnitPlatform()
}

gradlePlugin {
    plugins {
        s3BuildCache {
            id = 'com.talk2duck.gradle-s3-build-cache'
            implementationClass = 'com.talk2duck.gradle.buildcache.S3BuildCachePlugin'
            displayName = 'Gradle S3 Build Cache Plugin'
            description = 'Gradle build cache plugin that uses AWS S3 to store build artifacts'
        }
    }
}

pluginBundle {
    website = 'https://github.com/talk2duck/gradle-s3-build-cache'
    vcsUrl = 'https://github.com/talk2duck/gradle-s3-build-cache'
    tags = ['build-cache', 'cache', 's3']
}
